#!/usr/bin/env ruby

# control wrapper for ConcertoConfigServer sinatra app

require "rubygems"
require "daemons"
require "bandshell/application/app"
require 'bandshell/config_store'

#if the password has not been changed before during initial setup,
#read a new one and change passwords accordingly
unless Bandshell::ConfigStore.config_exists?('system_passwords_changed')
  system_password = Bandshell::ConfigStore.read_config('system_password', '')
  unless system_password.empty?
    system("echo \"root:#{system_password}\" | chpasswd")
    system("echo \"concerto:#{system_password}\" | chpasswd")
    Bandshell::ConfigStore.delete_config('system_password')
    Bandshell::ConfigStore.write_config('system_passwords_changed', 'true')
  end
end

dir_mode = (ConcertoConfigServer.development? ? :normal : :system)

Daemons.run_proc("bandshelld", :log_output=>true, :dir_mode => dir_mode) do
  ConcertoConfigServer.run!
end

bandshell_url = "http://localhost:" + ConcertoConfigServer.settings.port.to_s

timer_argv = ARGV.dup
timer_argv << "--" unless timer_argv.include? "--"
timer_argv << bandshell_url

Daemons.run(File.join(File.dirname(__FILE__), "bandshell-timer.rb"),
            :log_output=>true, :dir_mode => dir_mode,
            :ARGV => timer_argv)
